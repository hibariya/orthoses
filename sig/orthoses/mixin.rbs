# THIS IS GENERATED CODE from `$ rake sig`

class Orthoses::Mixin
  def initialize: (Orthoses::_Call loader, ?if: nil | ^(Module base_mod, :include | :extend | :prepend how, Module mod) -> boolish) -> void
  def call: () -> Orthoses::store
  private def type_params_sig: (untyped mod) -> (::String | "")
  @loader: Orthoses::_Call
  private def collect_definitions: (Orthoses::store store, Orthoses::CallTracer call_tracer, :include | :extend | :prepend how) -> void
  CALL_GRAPH: Hash[singleton(Orthoses::Content::HeaderBuilder) | singleton(Orthoses::CallTracer) | singleton(Orthoses::CallTracer::Lazy) | singleton(Module) | singleton(BasicObject) | singleton(Orthoses::Trace::Attribute) | singleton(Orthoses::Trace::Method) | singleton(Orthoses::Writer), [ [ :include, singleton(RBS::Environment::ContextUtil) ] ] | [ [ :include, singleton(Orthoses::CallTracer::Capturable) ] ] | [ [ :prepend, singleton(Orthoses::LazyTracePoint::MethodAddedHook) ] ] | [ [ :prepend, singleton(Orthoses::LazyTracePoint::SignletonMethodAddedHook) ] ] | [ [ :include, singleton(Orthoses::Trace::Targetable) ] ] | [ [ :prepend, singleton(Orthoses::Outputable) ] ]]
end
