file :src do
  sh "git clone https://github.com/minitest/minitest.git src"
end

desc "generate minitest"
task :minitest => :src do
  $:.unshift(File.expand_path("src/lib"))

  out = Pathname('out')
  out.rmtree rescue nil
  require 'orthoses'

  Orthoses::Builder.new do
    use Orthoses::CreateFileByName,
      to: out.to_s
    use Orthoses::Filter do |name, content|
      name.start_with?("Minitest") || name == "Kernel"
    end
    use Orthoses::ExcludeRBS,
      rbs: <<~RBS
        module Kernel
          RUBYGEMS_ACTIVATION_MONITOR: Monitor
        end
      RBS
    use Orthoses::LoadRBS,
      paths: ["known.rbs"]
    use Orthoses::Constant,
      strict: false,
      if: ->(current, const, val, rbs){
        !Orthoses::Utils.rbs_defined_const?("#{current}::#{const}")
      }
    use Orthoses::Mixin
    use Orthoses::Attribute
    use Orthoses::RBSPrototypeRB,
      paths: Dir.glob('src/lib/minitest{.rb,/*.rb}'),
      constant_filter: ->(_) { false },
      mixin_filter: ->(_) { false },
      attribute_filter: ->(_) { false }
    run ->(){
      require_relative 'src/lib/minitest'
      require_relative 'src/lib/minitest/test'
      require_relative 'src/lib/minitest/spec'
      require_relative 'src/lib/minitest/parallel'
      require_relative 'src/lib/minitest/mock'
      require_relative 'src/lib/minitest/benchmark'

      require_relative 'src/lib/minitest/pride_plugin'
    }
  end.call

  # Remove dependency to rake
  sh "rm out/minitest/test_task.rbs"

  sh "rbs -I #{out} validate"
  tmp = out.join("kernel.rbs").read
  out.join("kernel.rbs").open("w") do |f|
    f.puts "%a{annotate:rdoc:skip}"
    f.write tmp
  end
  sh "rdoc --ri --output rdoc --root src src"
  sh "rbs annotate --no-system --no-gems --no-site --no-home -d rdoc out"
end

task default: :minitest
